main {
    init /
        b1 = 0
        b2 = 0
        b3 = 0
        b4 = 0
        b5 = 0
        returnFloor = 0
        count = 0
        targetCount = 0
        floor1
}

buttonHander {
    init / floor1
    sig_b1 / b1 = 1
    sig_b2 / b2 = 1
    sig_b3 / b3 = 1
    sig_b4 / b4 = 1
    sig_b5 / b5 = 1
}

timer {
    sig_tic[count < targetCount] / count++
    sig_tic[count >= targetCount && returnFloor == 1] / floor1
    sig_tic[count >= targetCount && returnFloor == 2] / floor2
    sig_tic[count >= targetCount && returnFloor == 3] / floor3
    sig_tic[count >= targetCount && returnFloor == 4] / floor4
    sig_tic[count >= targetCount && returnFloor == 5] / floor5
}

floors {
    exit / count = 0;
}

floor1 {
    entry / direction = 1 // up

    init[b1] /
        b1 = 0
        returnFloor = 1
        targetCount = 10
        timer

    init[!b1 && (b2 or b3 or b4 or b5)] /
        returnFloor = 2
        targetCount = 5
        timer

    sig_b1 /
        returnFloor = 1
        targetCount = 10
        timer

    sig_b2
    sig_b3
    sig_b4
    sig_b5 /
        returnFloor = 2
        targetCount = 5
        timer
}

floor2 {
    init[b2] /
        returnFloor = 2
        targetCount = 10
        timer

    init[!b2 and direction and (b2 or b4 or b5)] /
        returnFloor = 3
        targetCount = 5
        timer

    init[!b2 and !direction and b1] /
        returnFloor = 1
        targetCount = 5
        timer 

    sig_b1 /
        direction = 0
        returnFloor = 1
        targetCount = 5
        timer

    sig_b2 /
        returnFloor = 2
        targetCount = 10
        timer

    sig_b3
    sig_b4
    sig_b5 /
        direction = 1
        returnFloor = 3
        targetCount = 5
        timer
}

floor3 {
    init[b3] /
        returnFloor = 3
        targetCount = 10
        timer

    init[!b3 and direction and (b4 or b5)] /
        returnFloor = 4
        targetCount = 5
        timer

    init[!b3 and !direction and (b1 or b2)] /
        returnFloor = 2
        targetCount = 5
        timer 

    sig_b1
    sig_b2 /
        direction = 0
        returnFloor = 2
        targetCount = 5
        timer

    sig_b3 /
        returnFloor = 3
        targetCount = 10
        timer

    sig_b4
    sig_b5 /
        direction = 1
        returnFloor = 4
        targetCount = 5
        timer
}

floor4 {
    init[b5] /
        returnFloor = 4
        targetCount = 10
        timer

    init[!b4 and direction and b5] /
        returnFloor = 5
        targetCount = 5
        timer

    init[!b4 and !direction and (b1 or b2 or b3)] /
        returnFloor = 2
        targetCount = 5
        timer 

    sig_b1
    sig_b2
    sig_b3 /
        direction = 0
        returnFloor = 3
        targetCount = 5
        timer

    sig_b4 /
        returnFloor = 4
        targetCount = 10
        timer

    sig_b5 /
        direction = 1
        returnFloor = 5
        targetCount = 5
        timer
}

floor5 {
    entry / button5  = 0

    init[button5] /
            returnFloor = 5
            targetCount = 10
            timer

        init[!button5] /
            button5 = 0
            direction = 0

            if (
                button1 or
                button2 or
                button3 or
                button4
            ) {
                returnFloor = 4
                targetCount = 5
                timer
            }

        sig_b5 /
            returnFloor = 5
            targetCount = 10
            timer

        sig_b1
        sig_b2
        sig_b3
        sig_b4 /
            returnFloor = 4
            targetCount = 5
            timer
}